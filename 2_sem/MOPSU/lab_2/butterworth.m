%Программа рассчитывает вектор желаемых полюсов 
%проектируемой системы в соответствии со стандартными 
%настройками по Баттерворту.
%Входными данными являются порядок системы и желаемое 
%время переходного процесса. 
close all;
%clear all;
%clc;
n= input('Введите порядок системы n = ');
poly_type = input(['Введите полином: \n' ...
    '1 - Ньютон, \n' ...
    '2 - Бессель,\n' ...
    '3 - Баттерворт\n' ...
    'poly_type = ']);

switch (poly_type)
    case 1 % Полином Ньютона
        z = [];
        k = 1;
        p = ones(1,n)*(-1);
    case 2 % Полином Баттерворта
        [z,p,k]=buttap(n);
    case 3 % Полином Бесселя
        [z,p,k]=besselap(n);
    otherwise
        error('Неверно задан тип полинома');
end

[b,a]=zp2tf(z,p,k);
SYS=tf(b,a);
% step(SYS), title('Нормированный переходный процесс');
grid;% Нормированный переходный процесс
% step(SYS), title('Нормированный переходный процесс');
grid;% Нормированный переходный процесс
[Y,T]=step(SYS,0:0.01:20);
T_dyn = T(Y>1+0.05 | Y < 1-0.05 );
tau = T_dyn(end);%Нормированное значение времени переходного процесса
tgel= input('Введите желаемое время переходного процесса tgel = ')
w0 = tau/tgel;% Значение среднегеометрического корня
for i=1:n     % Расчет коэффициентов желаемого полинома
    a(i+1)=a(i+1).*w0^(i);  
end
b=a(n+1); % Расчет коэффициента числителя ПФ
SYS1=tf(b,a);
[z,p,k]=tf2zp(b,a);% Векторы нулей, полюсов и коэффициент усиления желаемой системы
% figure
% step(SYS1), title('Переходный процесс в желаемой системе');
grid% Переходный процесс в желаемой системе
disp('Вектор желаемых полюсов')
p
disp('Коэффициент числителя ПФ желаемой системы')
b
